/** @jsx React.DOM */

var React 		= require('react/addons');
var ReactStyles = require('react-style');
var CodeMirror 	= require('codemirror');

//modes
require('codemirror/mode/markdown/markdown.js');

//addons
require('codemirror/addon/display/placeholder.js');
require('codemirror/addon/edit/continuelist.js');

var noop = function () {};

module.exports = React.createClass({
  	displayName : 'CodeMirror',

  	propTypes: {
		mode  : React.PropTypes.string,
		theme : React.PropTypes.string,
		change: React.PropTypes.func,
		value : React.PropTypes.string
	},

  	getDefaultProps : function () {
		return {
			value  : '',
			name   : 'codemirror-editor',
			mode   : 'markdown',
			theme  : 'default',
			placeholder : "Please",
			styles : {},
			gutter : false,
			wrap   : true,
			change : noop
    	};
  	},

	componentDidMount : function () {

		var editor = CodeMirror.fromTextArea(this.refs.editor.getDOMNode(), {
			mode 			: this.props.mode,
			lineWrapping 	: this.props.wrap,
			tabMode 		: 'indent',
			autofocus 		: true,
			viewportMargin  : Infinity,
			placeholder 	: this.props.placeholder,
			theme 			: this.props.theme,
			extraKeys 		: { "Enter": "newlineAndIndentContinueMarkdownList" }
		});

		editor.on('change', this.props.change);

		setTimeout(function(){
			editor.refresh();
		}, 500);
	},

	render: function() {
		return (<div id={this.props.name} className={"w-codemirror"}>
					<textarea ref="editor" defaultValue={this.props.value}/>
				</div>);
	}
});